version: '3.8'

services:
  mcp-atlassian:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: mcp-atlassian-typescript:latest
    container_name: mcp-atlassian-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - SERVER_PORT=3000
      - LOG_LEVEL=info
      - TRANSPORT_TYPE=http
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Redis for distributed caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: mcp-atlassian-redis
  #   restart: unless-stopped
  #   command: redis-server --requirepass ${REDIS_PASSWORD:-mcp-atlassian}
  #   environment:
  #     - REDIS_PASSWORD=${REDIS_PASSWORD:-mcp-atlassian}
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - mcp-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

networks:
  mcp-network:
    driver: bridge
    name: mcp-atlassian-network

volumes:
  # redis_data:
  #   driver: local
  logs:
    driver: local
