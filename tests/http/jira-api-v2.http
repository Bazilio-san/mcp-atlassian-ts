# 1. Issues
#| Method    | URL                             | Description                      |
#| -------- | ------------------------------- | ----------------------------- |
#| `GET`    | `/issue/{issueIdOrKey}`         | Get full issue data |
#| `POST`   | `/issue`                        | Create new issue          |
#| `PUT`    | `/issue/{issueIdOrKey}`         | Update issue fields          |
#| `DELETE` | `/issue/{issueIdOrKey}`         | Delete issue                |
#| `GET`    | `/search`                       | Search issues by JQL            |
#| `POST`   | `/issue/{issueIdOrKey}/comment` | Add comment          |
#| `GET`    | `/issue/{issueIdOrKey}/comment` | Get comment list  |
#

### Get full issue data
GET {{baseUrl}}/rest/api/2/issue/AITECH-379
Content-Type: application/json
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


### Update issue
PUT {{baseUrl}}/rest/api/2/issue/AITECH-4
Content-Type: application/json
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

{
  "fields": {
    "summary": "Updated Test Issue - 2025-09-19T18-15",
    "description": "Updated description for API testing 2"
  }
}

### Add worklog
POST {{baseUrl}}/rest/api/2/issue/AITECH-1/worklog
Content-Type: application/json
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

{
  "timeSpent": "2m",
  "comment": "API test worklog entry",
  "started": "2025-09-19T15:00:00.000+0000"
}

### Get issue link types
GET {{baseUrl}}/rest/api/2/issueLinkType
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}
Content-Type: application/json

### Create remote link
POST {{baseUrl}}/rest/api/2/issue/AITECH-4/remotelink
Content-Type: application/json
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

{
  "object" : {
    "url" : "https://example.com/test-link",
    "title" : "Test Remote Link"
  }
}

### Create remote link
GET {{baseUrl}}/rest/api/2/issue/AITECH-4/remotelink
Content-Type: application/json
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


### Create issue link
GET {{baseUrl}}/rest/api/2/issue/AITECH-4?fields=issuelinks
Content-Type: application/json
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


### Create issue link
POST {{baseUrl}}/rest/api/2/issueLink
Content-Type: application/json
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

{
  "type": {
    "name": "Clone"
  },
  "inwardIssue": {
    "key": "AITECH-1"
  },
  "outwardIssue": {
    "key": "AITECH-2"
  },
  "comment": {
    "body": "Link created for API testing"
  }
}



### Issue creation example:
POST {{baseUrl}}/rest/api/2/issue
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}
Content-Type: application/json

{
  "fields": {
    "project": {
      "key": "AITECH"
    },
    "summary": "TEST-AITECH-2",
    "issuetype": {
      "name": "Task+"
    },
    "description": "Three maidens by the window\nSpinning late in the evening",
    "assignee": {
      "name": "vvmakarov"
    },
    "labels": ["CS-BOT"],
    "priority": {
      "id": "10504"
    }
  }
}


### Create issue attachment
POST {{baseUrl}}/rest/api/2/issue/AITECH-1/attachments
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}
X-Atlassian-Token: no-check
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="comment"
Content-Type: text/plain

Test upload
--WebAppBoundary
Content-Disposition: form-data; name="file"; filename="test.txt"
Content-Type: text/plain

< ./test-attachment.txt
--WebAppBoundary--


###

# 2. Metadata

#| Method | URL                              | Description                                                                         |
#| ----- | -------------------------------- | -------------------------------------------------------------------------------- |
#| `GET` | `/issue/createmeta`              | Metadata for creating issues (project list, issue types, required fields) |
#| `GET` | `/issue/{issueIdOrKey}/editmeta` | Available fields for editing specific issue                              |
#| `GET` | `/priority`                      | Priority list                                                               |
#| `GET` | `/status`                        | All statuses list                                                             |

###
GET {{baseUrl}}/rest/api/2/issue/createmeta
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

###
GET {{baseUrl}}/rest/api/2/priority
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

###
GET {{baseUrl}}/rest/api/2/issue/AITECH-845/editmeta
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

###
GET {{baseUrl}}/rest/api/2/status
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

# 3. Projects

#| Method | URL                                  | Description                         |
#| ----- | ------------------------------------ | -------------------------------- |
#| `GET` | `/project`                           | All projects                      |
#| `GET` | `/project/{projectIdOrKey}`          | Project data                   |
#| `GET` | `/project/{projectIdOrKey}/statuses` | Statuses by issue types in project |


###
GET {{baseUrl}}/rest/api/2/project
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


###
GET {{baseUrl}}/rest/api/2/project/AITECH
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


# 4. Transitions

#| Method  | URL                                 | Description                         |
#| ------ | ----------------------------------- | -------------------------------- |
#| `GET`  | `/issue/{issueIdOrKey}/transitions` | Possible issue transitions        |
#| `POST` | `/issue/{issueIdOrKey}/transitions` | Change issue status |

### Issue status change example:
POST /rest/api/2/issue/TEST-1/transitions

{
  "transition": { "id": "31" }
}

###

#5. Users

#| Method  | URL                             | Description                              |
#| ------ | ------------------------------- | ------------------------------------- |
#| `GET`  | `/user?username={name}`         | Find user by name           |
#| `GET`  | `/user/search?username={query}` | Search users                   |
#| `POST` | `/user`                         | Create user (if allowed) |

###
GET {{baseUrl}}/rest/api/2/user?username=vvmakarov
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

###
GET {{baseUrl}}/rest/api/2/user/search?username=Makarov
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


#6. Worklog
#| Method  | URL                             | Description            |
#| ------ | ------------------------------- | ------------------- |
#| `GET`  | `/issue/{issueIdOrKey}/worklog` | All work logs     |
#| `POST` | `/issue/{issueIdOrKey}/worklog` | Add work log |


#7. Attachments
#| Method  | URL                                 | Description                                             |
#| ------ | ----------------------------------- | ---------------------------------------------------- |
#| `POST` | `/issue/{issueIdOrKey}/attachments` | Upload file (requires `X-Atlassian-Token: no-check`) |
#| `GET`  | `/attachment/{id}`                  | Download attachment                                     |
#

# Additional features
# Pagination — startAt and maxResults parameters for /search and other lists.
# Expand — expand parameter for loading nested data (renderedFields, transitions, changelog).
# JQL — powerful issue search language.
# JQL search example:

###
POST {{baseUrl}}/rest/api/2/search

{
  "jql": "project = TEST AND status = 'Open'",
  "maxResults": 50,
  "fields": ["summary", "status", "assignee"]
}



### AUTOMATION

### reporter
GET {{baseUrl}}/rest/api/latest/user/search?username=Makaro
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### labels
GET {{baseUrl}}/rest/api/1.0/labels/suggest?query=CS
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### issuelinks
GET {{baseUrl}}/rest/api/2/issue/picker?currentProjectId=&showSubTaskParent=true&showSubTasks=true&currentIssueKey=AITECH-845&query=CSB
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Watchers
GET {{baseUrl}}/rest/api/1.0/users/picker?fieldName=customfield_26803&query=Makaro
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### assignee
GET {{baseUrl}}/rest/api/latest/user/assignable/search?issueKey=AITECH-845&username=Makaro
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


### assignee
GET {{baseUrl}}/rest/agile/1.0/board/
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


### assignee
GET {{baseUrl}}/rest/agile/1.0/board/968/sprint
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


### assignee
GET {{baseUrl}}/rest/agile/1.0/board/820/sprint
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Kanban boards list
GET {{baseUrl}}/rest/agile/1.0/board?type=kanban
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Board info (EDOX PROD ISSUES board - ID 820)
GET {{baseUrl}}/rest/agile/1.0/board/820
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Board configuration (columns, ranking, estimation)
GET {{baseUrl}}/rest/agile/1.0/board/820/configuration
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Board projects
GET {{baseUrl}}/rest/agile/1.0/board/820/project
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Board issues with JQL and quick filter
GET {{baseUrl}}/rest/agile/1.0/board/820/issue?jql=project%20%3D%20AITECH%20AND%20status%20!%3D%20Done&maxResults=50&quickFilterId=1
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Board epics
GET {{baseUrl}}/rest/agile/1.0/board/820/epic
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Issues of a specific epic on the board
GET {{baseUrl}}/rest/agile/1.0/board/820/epic/12345/issue
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Board versions
GET {{baseUrl}}/rest/agile/1.0/board/820/version
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Board properties (list)
GET {{baseUrl}}/rest/agile/1.0/board/820/properties
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}

### Create Version
POST {{baseUrl}}/rest/api/2/version
Authorization: Basic {{JIRA_USER}} {{JIRA_PASS}}


