# ==================================================
# MCP Atlassian TypeScript Server Configuration
# ==================================================

# --------------------------------------------------
# ATLASSIAN CONFIGURATION
# --------------------------------------------------

# Atlassian instance URL (required)
# Example: https://your-domain.atlassian.net
ATLASSIAN_URL=https://your-domain.atlassian.net

# User email for authentication (required for basic auth)
ATLASSIAN_EMAIL=your-email@company.com

# --------------------------------------------------
# AUTHENTICATION METHODS
# Choose ONE of the following authentication methods:
# --------------------------------------------------

# 1. Basic Authentication (API Token)
# Generate token at: https://id.atlassian.com/manage-profile/security/api-tokens
ATLASSIAN_API_TOKEN=your-api-token

# 2. Personal Access Token (Recommended for server/DC)
# More secure than basic auth, single token authentication
ATLASSIAN_PAT=your-personal-access-token

# 3. OAuth 2.0 (Advanced - for applications)
# Required for marketplace apps and advanced integrations
ATLASSIAN_OAUTH_CLIENT_ID=your-oauth-client-id
ATLASSIAN_OAUTH_CLIENT_SECRET=your-oauth-client-secret
ATLASSIAN_OAUTH_ACCESS_TOKEN=your-oauth-access-token
ATLASSIAN_OAUTH_REFRESH_TOKEN=your-oauth-refresh-token
ATLASSIAN_OAUTH_REDIRECT_URI=http://localhost:3000/oauth/callback

# --------------------------------------------------
# SERVER CONFIGURATION
# --------------------------------------------------

# HTTP server port (default: 3000, range: 1024-65535)
PORT=3000

# Server bind address
# '0.0.0.0' - Listen on all network interfaces
# 'localhost' - Listen only on local interface
HOST=0.0.0.0

# Environment: development, production, test
NODE_ENV=development

# Transport type for MCP communication
# Options: stdio (for Claude Desktop), http (for testing), sse (experimental)
TRANSPORT_TYPE=http

# --------------------------------------------------
# LOGGING CONFIGURATION
# --------------------------------------------------

# Log level: debug, info, warn, error
LOG_LEVEL=info

# Pretty-print logs (true/false)
# Set to true for readable logs in development
LOG_PRETTY=true

# --------------------------------------------------
# RATE LIMITING
# --------------------------------------------------

# Rate limit window in milliseconds (default: 900000 = 15 minutes)
RATE_LIMIT_WINDOW_MS=900000

# Maximum requests per window (default: 100)
RATE_LIMIT_MAX_REQUESTS=100

# --------------------------------------------------
# CACHING
# --------------------------------------------------

# Cache TTL in seconds (default: 300 = 5 minutes)
# Reduces API calls by caching responses
CACHE_TTL_SECONDS=300

# Maximum number of cached items (default: 1000)
CACHE_MAX_ITEMS=1000

# --------------------------------------------------
# SSL/TLS CONFIGURATION
# --------------------------------------------------

# Reject unauthorized SSL certificates (0 = false, 1 = true)
# Set to 0 for self-signed certificates (not recommended for production)
NODE_TLS_REJECT_UNAUTHORIZED=1

# Verify SSL peer certificate (true/false)
SSL_VERIFY_PEER=true

# --------------------------------------------------
# JIRA CONFIGURATION
# --------------------------------------------------

# Maximum results per JIRA API request (default: 50, max: 100)
JIRA_MAX_RESULTS=50

# Default JIRA project key for operations
# Example: PROJ, TEAM, etc.
JIRA_DEFAULT_PROJECT=

# --------------------------------------------------
# CONFLUENCE CONFIGURATION
# --------------------------------------------------

# Maximum results per Confluence API request (default: 50, max: 100)
CONFLUENCE_MAX_RESULTS=50

# Default Confluence space key for operations
# Example: WIKI, DOCS, KB, etc.
CONFLUENCE_DEFAULT_SPACE=

# --------------------------------------------------
# FEATURE FLAGS
# --------------------------------------------------

# Comma-separated list of enabled MCP tools
# Leave empty to enable all 47 tools
# Example: jira_get_issue,jira_create_issue,confluence_get_page
ENABLED_TOOLS=

# --------------------------------------------------
# ADVANCED CONFIGURATION
# --------------------------------------------------

# Environment variable suffix for loading additional .env files
# Example: Set to "prod" to also load .env.prod
SUFFIX_ENV=

# Session secret for Express sessions (generate a strong random string)
SESSION_SECRET=your-secret-key-here-change-in-production

# Debug mode (true/false) - enables verbose logging
DEBUG=false
